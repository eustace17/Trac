// Generated by view binder compiler. Do not edit!
package com.example.appdevelopmenttrialtwo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appdevelopmenttrialtwo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final Button mBtnegister;

  @NonNull
  public final EditText mEdFrName;

  @NonNull
  public final EditText mEdtAdmNo;

  @NonNull
  public final EditText mEdtDOA;

  @NonNull
  public final EditText mEdtDOB;

  @NonNull
  public final EditText mEdtFrCell;

  @NonNull
  public final EditText mEdtFrId;

  @NonNull
  public final EditText mEdtFrOccupation;

  @NonNull
  public final EditText mEdtGrade;

  @NonNull
  public final EditText mEdtMrCell;

  @NonNull
  public final EditText mEdtMrId;

  @NonNull
  public final EditText mEdtMrJob;

  @NonNull
  public final EditText mEdtMrName;

  @NonNull
  public final EditText mEdtStdName;

  @NonNull
  public final EditText mEdtUpi;

  @NonNull
  public final TextView mTxtParents;

  @NonNull
  public final TextView mTxtStudent;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout linearLayout, @NonNull Button mBtnegister,
      @NonNull EditText mEdFrName, @NonNull EditText mEdtAdmNo, @NonNull EditText mEdtDOA,
      @NonNull EditText mEdtDOB, @NonNull EditText mEdtFrCell, @NonNull EditText mEdtFrId,
      @NonNull EditText mEdtFrOccupation, @NonNull EditText mEdtGrade, @NonNull EditText mEdtMrCell,
      @NonNull EditText mEdtMrId, @NonNull EditText mEdtMrJob, @NonNull EditText mEdtMrName,
      @NonNull EditText mEdtStdName, @NonNull EditText mEdtUpi, @NonNull TextView mTxtParents,
      @NonNull TextView mTxtStudent) {
    this.rootView = rootView;
    this.linearLayout = linearLayout;
    this.mBtnegister = mBtnegister;
    this.mEdFrName = mEdFrName;
    this.mEdtAdmNo = mEdtAdmNo;
    this.mEdtDOA = mEdtDOA;
    this.mEdtDOB = mEdtDOB;
    this.mEdtFrCell = mEdtFrCell;
    this.mEdtFrId = mEdtFrId;
    this.mEdtFrOccupation = mEdtFrOccupation;
    this.mEdtGrade = mEdtGrade;
    this.mEdtMrCell = mEdtMrCell;
    this.mEdtMrId = mEdtMrId;
    this.mEdtMrJob = mEdtMrJob;
    this.mEdtMrName = mEdtMrName;
    this.mEdtStdName = mEdtStdName;
    this.mEdtUpi = mEdtUpi;
    this.mTxtParents = mTxtParents;
    this.mTxtStudent = mTxtStudent;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout linearLayout = (ConstraintLayout) rootView;

      id = R.id.mBtnegister;
      Button mBtnegister = ViewBindings.findChildViewById(rootView, id);
      if (mBtnegister == null) {
        break missingId;
      }

      id = R.id.mEdFrName;
      EditText mEdFrName = ViewBindings.findChildViewById(rootView, id);
      if (mEdFrName == null) {
        break missingId;
      }

      id = R.id.mEdtAdmNo;
      EditText mEdtAdmNo = ViewBindings.findChildViewById(rootView, id);
      if (mEdtAdmNo == null) {
        break missingId;
      }

      id = R.id.mEdtDOA;
      EditText mEdtDOA = ViewBindings.findChildViewById(rootView, id);
      if (mEdtDOA == null) {
        break missingId;
      }

      id = R.id.mEdtDOB;
      EditText mEdtDOB = ViewBindings.findChildViewById(rootView, id);
      if (mEdtDOB == null) {
        break missingId;
      }

      id = R.id.mEdtFrCell;
      EditText mEdtFrCell = ViewBindings.findChildViewById(rootView, id);
      if (mEdtFrCell == null) {
        break missingId;
      }

      id = R.id.mEdtFrId;
      EditText mEdtFrId = ViewBindings.findChildViewById(rootView, id);
      if (mEdtFrId == null) {
        break missingId;
      }

      id = R.id.mEdtFrOccupation;
      EditText mEdtFrOccupation = ViewBindings.findChildViewById(rootView, id);
      if (mEdtFrOccupation == null) {
        break missingId;
      }

      id = R.id.mEdtGrade;
      EditText mEdtGrade = ViewBindings.findChildViewById(rootView, id);
      if (mEdtGrade == null) {
        break missingId;
      }

      id = R.id.mEdtMrCell;
      EditText mEdtMrCell = ViewBindings.findChildViewById(rootView, id);
      if (mEdtMrCell == null) {
        break missingId;
      }

      id = R.id.mEdtMrId;
      EditText mEdtMrId = ViewBindings.findChildViewById(rootView, id);
      if (mEdtMrId == null) {
        break missingId;
      }

      id = R.id.mEdtMrJob;
      EditText mEdtMrJob = ViewBindings.findChildViewById(rootView, id);
      if (mEdtMrJob == null) {
        break missingId;
      }

      id = R.id.mEdtMrName;
      EditText mEdtMrName = ViewBindings.findChildViewById(rootView, id);
      if (mEdtMrName == null) {
        break missingId;
      }

      id = R.id.mEdtStdName;
      EditText mEdtStdName = ViewBindings.findChildViewById(rootView, id);
      if (mEdtStdName == null) {
        break missingId;
      }

      id = R.id.mEdtUpi;
      EditText mEdtUpi = ViewBindings.findChildViewById(rootView, id);
      if (mEdtUpi == null) {
        break missingId;
      }

      id = R.id.mTxtParents;
      TextView mTxtParents = ViewBindings.findChildViewById(rootView, id);
      if (mTxtParents == null) {
        break missingId;
      }

      id = R.id.mTxtStudent;
      TextView mTxtStudent = ViewBindings.findChildViewById(rootView, id);
      if (mTxtStudent == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, linearLayout, mBtnegister,
          mEdFrName, mEdtAdmNo, mEdtDOA, mEdtDOB, mEdtFrCell, mEdtFrId, mEdtFrOccupation, mEdtGrade,
          mEdtMrCell, mEdtMrId, mEdtMrJob, mEdtMrName, mEdtStdName, mEdtUpi, mTxtParents,
          mTxtStudent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
